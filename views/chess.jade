html(lang='en')
	head
		meta(charset='utf-8')
		meta(name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1")
		title Chess: Bored Games
		link(rel='stylesheet' href='css/chess.css')
		link(rel='stylesheet' href='css/style.css')
		script(type='text/javascript' src="/js/socket.io.js")
		script(type='text/javascript' src="/js/chessPieceMoves.js")
		script(type='text/javascript' src="/js/jquery.js")
		script(type='text/javascript' src='/js/chessPieceSelection.js')
		script.
			var socket = null
			var currentBoard = null
			var columns = ['a','b','c','d','e','f','g','h']
			var rows = ['8','7','6','5','4','3','2','1']
			var playerColour = 0

			$(document).ready(function(){
				playerColour = $('#playerColour')[0].value
				var origin = window.location.origin
				if(origin != "http://127.0.0.1:3000")
					origin = origin + ":8000"
				socket = io(window.location.origin)
				
				socket.on('connect', function(data){
					socket.emit('joinGame', { gameId: $("#username")[0].innerHTML})
				})
				socket.on('gamePieces', function (data) {
					if(currentBoard == null)
						currentBoard = data.pieces
					else if(currentBoard == data.pieces)
						return

					setTurnData(data.turn, data.practice, data.victor)
					animateDiff(currentBoard, data.pieces, function(){
						if(data.practice == 1)
							playerColour = data.turn

						generateField(data.pieces)

						if(data.turn == playerColour && data.victor == -1)
							$("#title")[0].innerHTML = "Chess! It is your turn"
						else if(data.victor == -1)
							$("#title")[0].innerHTML = "Chess! It is " + $('#opponentData')[0].value + "'s turn"
						else if(data.victor == playerColour)
							$("#title")[0].innerHTML = "Chess! You have won!!"
						else
							$("#title")[0].innerHTML = "Chess! " + $('#opponentData')[0].value + " has won!!"
					})					
				})
			})
			function submitMove(cFrom, cTo){
				console.log('saving game')
				socket.emit('saveGame', { game: $("#username")[0].innerHTML, from: cFrom, to: cTo})
			}

			function generateField(pieces){
				console.log('generating for ' + playerColour)
				var playField = document.getElementById("field");
				while (playField.firstChild) {
					playField.removeChild(playField.firstChild);
				}

				var topRowInner = ""
				for(var i=0; i<columns.length; i++){
					if(playerColour == 0)
						topRowInner += "<td><h>" + columns[i] + "</h></td>"
					else
						topRowInner += "<td><h>" + columns[7-i] + "</h></td>"
				}
				var topRow = $("<tr class='topRow'><td>" + topRowInner + "</td></tr>")

				topRow.appendTo($("#field"))

				for(var i=0; i<rows.length; i++){
					var fieldRow = "<tr>"
					for(var j=-1; j<columns.length; j++){
						if(j == -1){
							fieldRow += "<td class='sideColumn'>"
							if(playerColour == 0)
								fieldRow += rows[i]
							else
								fieldRow += rows[7-i]
							continue
						}

						if(playerColour == 0)
							var cellname = columns[j] + rows[i]
						else
							var cellname = columns[7-j] + rows[7-i]

						if((i + j) % 2 == 0)
							fieldRow += "<td class='tile' id='" + cellname + "' style='background-color:white'>"
						else
							fieldRow += "<td class='tile' id='" + cellname + "' style='background-color:black'>"

						fieldRow += "<div id='" + cellname + "background' class='piece-background'></div></td>"
					}
					fieldRow += "</tr>"

					$(fieldRow).appendTo($("#field"))
				}
				placePieces(pieces)
			}
			function placePieces(pieces){
				for(var i=0; i<pieces.length; i++){
					if(pieces[i].location != "X0"){
						pieceString = "<div id='" + pieces[i].location + "piece' class='game-piece'>"
							if(pieces[i].colour == 0)
								pieceString += "<h class='first' id='" + pieces[i].location + "name'>" + pieces[i].name + "</h>"
							else
								pieceString += "<h class='second' id='" + pieces[i].location + "name'>" + pieces[i].name + "</h>"
						pieceString += "<h class='hidden' id='" + pieces[i].location + "colour'>" + pieces[i].colour + "</h></div>"

						$(pieceString).appendTo($("#"+pieces[i].location))
					}
				}
				selectionCheck()
			}
			function animateDiff(oldPieces, newPieces, callback){
				currentBoard = newPieces

				if(oldPieces == newPieces)
					return callback()
				testPiece(oldPieces, newPieces, 0, callback)
			}
			function testPiece(oldPieces, newPieces, i, callback){
				if(i >= oldPieces.length)
					callback()
				var pieceO = oldPieces[i]
				var pieceN = newPieces[i]

				if(playerColour == 0){
					var rowO = ((8-pieceO.location[1]) * 50 + 25) + "px"
					var colO = (((columns.indexOf(pieceO.location[0])) * 50) + 25) + "px"
					var rowN = ((8-pieceN.location[1]) * 50 + 25) + "px"
					var colN = (((columns.indexOf(pieceN.location[0])) * 50) + 25) + "px"
				}
				else{
					var rowO = ((pieceO.location[1]-1) * 50 + 25) + "px"
					var colO = (((7-columns.indexOf(pieceO.location[0])) * 50) + 25) + "px"
					var rowN = ((pieceN.location[1]-1) * 50 + 25) + "px"
					var colN = (((7-columns.indexOf(pieceN.location[0])) * 50) + 25) + "px"
				}
				if(pieceO.location != pieceN.location){
					var diffPiece = $($("#" + pieceO.location + "piece")[0].outerHTML)
					diffPiece[0].style.top = rowO
					diffPiece[0].style.left= colO
					diffPiece.appendTo($("#field"))
					$("#" + pieceO.location + "piece")[0].outerHTML = ""

					setTimeout(function(){
						$("#" + pieceO.location + "piece")[0].style.top = rowN
						$("#" + pieceO.location + "piece")[0].style.left= colN

						setTimeout(function(){
							return callback()
						},700)
					},10)
				}
				else{
					return testPiece(oldPieces, newPieces, i + 1, callback)
				}
			}
	body
		#header
			a.nav-button(href='/') home
			a.nav-button(href='/logout') logout
			h#username= gameId
			- if(victor != 'none')
				h1#title= "Chess! " + victor + " HAS WON!"
			- else if(hasTurn == 'true')
				h1#title= "Chess! It is your turn"
			- else
				h1#title= "Chess! " + " It is " + opponent + "'s turn"
			
		#background
		#main
			input#playerColour(style='position:fixed; top: 100px; left: 10px' type='text' value= playerColour disabled)
			input.hidden#hasTurn(type='text' value="" disabled)
			input.hidden#moveData(form='moveForm' type='text' name='movement' value='hi')
			input.hidden#opponentData(value= opponent)

			div#submitButton= "submit"

			table#field